pipeline {
agent any
    tools { 
        maven 'Maven'
        jdk 'JDK' 
    }
  stages {
    stage('Source') { // Get code
      steps {
        // get code from our Git repository
        git 'https://github.com/saurabh12j/DevOps-Demo-WebApp.git'
      }
    }
      
      stage ('SonarQube Analysis'){
steps{
//withSonarQubeEnv('sonarqube') {
//sh 'mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.2:sonar'

sh 'mvn -Dsonar.test.exclusions=**/test/java/servlet/createpage_junit.java -Dsonar.login=admin -Dsonar.password=sonar -Dsonar.tests=. -Dsonar.inclusions=**/test/java/servlet/createpage_junit.java -Dsonar.sources=. sonar:sonar -Dsonar.host.url=http://23.96.91.93:9000'
}
} 
//}
    stage('Build') { // Compile and do unit testing

      steps {
        // run Gradle to execute compile and unit testing
        sh 'mvn -B -DskipTests clean compile'
      }
        post {
                 always {
                     jiraSendBuildInfo site: 'saurabh12j.atlassian.net'
                 }}}
      stage('Deploy - Test') { // Compile and do unit testing

      steps {
        // run Gradle to execute compile and unit testing
        sh 'mvn -B clean package'
      }
          post {
                 always {
                     jiraSendDeploymentInfo environmentId: '1', environmentName: 'Test', environmentType: 'testing', issueKeys: ['SQ-1'], serviceIds: [''], site: 'saurabh12j.atlassian.net', state: 'successful' 
                 }}}
stage('UI Test') { // Compile and do unit testing

      steps {
        // run Gradle to execute compile and unit testing
        sh 'mvn -B -f functionaltest/pom.xml test'
      }
    }

  }
}
